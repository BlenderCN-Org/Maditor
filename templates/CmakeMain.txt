set(MODULES %3)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/../${MADGINE_BUILD_TYPE}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR}/../${MADGINE_BUILD_TYPE}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR}/../${MADGINE_BUILD_TYPE}/bin)


if (MADGINE_BUILD_TYPE STREQUAL "release")
    set(MADGINE_LIB_TYPE STATIC)
    add_definitions(-DGAME_RELEASE) 

    add_executable(%1 main.cpp)
    
    target_link_libraries(%1 Madgine ${MODULES})
    
    add_custom_command(TARGET %1 POST_BUILD
                     COMMAND ${CMAKE_COMMAND} -E
                         copy $<TARGET_FILE:Madgine> ${CMAKE_CURRENT_SOURCE_DIR}/../Data/Media ${CMAKE_CURRENT_SOURCE_DIR}/../Data/plugins.cfg ${CMAKE_CURRENT_SOURCE_DIR}/../Data/resources.cfg ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
                         DEPENDS $<TARGET_FILE:Madgine>)
                         

else ()
    set(MADGINE_LIB_TYPE SHARED)   
endif ()



set(CMAKE_MODULE_PATH
	"${CMAKE_SOURCE_DIR}/../CMake"
)

include(PrecompiledHeader)

find_package(Madgine)
include_directories(${MADGINE_INCLUDE_DIRS})
include_directories(${%1_SOURCE_DIR})

%2

